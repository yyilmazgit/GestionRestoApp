// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantAPI.Models;

namespace RestaurantAPI.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20210416211140_Third-Create")]
    partial class ThirdCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantAPI.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientNom")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RestaurantAPI.Models.CommandeDetail", b =>
                {
                    b.Property<long>("CommandeDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CommandeMId")
                        .HasColumnType("bigint");

                    b.Property<int>("NourritureId")
                        .HasColumnType("int");

                    b.Property<decimal>("NourriturePrix")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("CommandeDetailId");

                    b.HasIndex("CommandeMId");

                    b.HasIndex("NourritureId");

                    b.ToTable("CommandeDetails");
                });

            modelBuilder.Entity("RestaurantAPI.Models.CommandeM", b =>
                {
                    b.Property<long>("CommandeMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CommandeNumber")
                        .HasColumnType("nvarchar(75)");

                    b.Property<decimal>("FTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaimentM")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CommandeMId");

                    b.HasIndex("ClientId");

                    b.ToTable("CommandeMains");
                });

            modelBuilder.Entity("RestaurantAPI.Models.Nourriture", b =>
                {
                    b.Property<int>("NourritureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NourritureNom")
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NourritureId");

                    b.ToTable("Nourritures");
                });

            modelBuilder.Entity("RestaurantAPI.Models.CommandeDetail", b =>
                {
                    b.HasOne("RestaurantAPI.Models.CommandeM", null)
                        .WithMany("CommandeDetails")
                        .HasForeignKey("CommandeMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantAPI.Models.Nourriture", "Nourriture")
                        .WithMany()
                        .HasForeignKey("NourritureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nourriture");
                });

            modelBuilder.Entity("RestaurantAPI.Models.CommandeM", b =>
                {
                    b.HasOne("RestaurantAPI.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RestaurantAPI.Models.CommandeM", b =>
                {
                    b.Navigation("CommandeDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
